syntax = "proto3";

package api.point.v1;

import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "sd-point/api/point/service/v1;v1";


service Point {
	// 创建点数
	rpc CreatePoint (CreatePointRequest) returns (google.protobuf.Empty);
	// 更新点数
	rpc UpdatePoint (UpdatePointRequest) returns (google.protobuf.Empty);
	// 删除点数
	rpc DeletePoint (DeletePointRequest) returns (google.protobuf.Empty);
	// 获取点数
	rpc GetPoint (GetPointRequest) returns (GetPointReply);
	// 获取点数列表
	rpc ListPoint (ListPointRequest) returns (ListPointReply);

	// 创建记录
	rpc CreateRecord (CreateRecordRequest) returns (google.protobuf.Empty);
	// 删除记录
	rpc DeleteRecord (DeleteRecordRequest) returns (google.protobuf.Empty);
	// 删除记录
	rpc UpdateRecord (UpdateRecordRequest) returns (google.protobuf.Empty);
	// 获取记录列表
	rpc ListRecord (ListRecordRequest) returns (ListRecordReply);
}

message CreatePointRequest {
	// 新增点数信息
	GetPointReply.Point point = 1 [(validate.rules).message.required = true];
}

message UpdatePointRequest {
	// 待更新点数信息
	GetPointReply.Point point = 1 [(validate.rules).message.required = true];
}

message DeletePointRequest {
	// 待删除的点数编号
	uint32 pid = 1;
}

message GetPointRequest {
	// 点数编号
	uint32 pid = 1;
}
message GetPointReply {
	message Point {
		// 点数编号
		uint32 pid = 1;
		// 用户编号
		uint32 uid = 2;
		// 点数数量
		int32 total = 3;
		// 点数名称
		string name = 4 [(validate.rules).string = {max_len: 32}];
		// 点数描述
		string desc = 5 [(validate.rules).string = {max_len: 1024}];

		// 创建时间
		uint64 created_at = 6;
		// 更新时间
		uint64 updated_at = 7;
		// 删除时间
		uint64 deleted_at = 8;
	}
	GetPointReply.Point point = 1;
}

message ListPointRequest {
	uint32 begin = 1;
	uint32 count = 2;
	repeated uint32 pids = 3;
}
message ListPointReply {
	bool finished = 1;
	uint32 count = 2;
	repeated GetPointReply.Point points = 3;
}

message Record {
	// 记录编号
	uint32 rid = 1;
	// 点数编号
	uint32 pid = 2;
	// 点数数量
	int32 num = 3 [(validate.rules).int32 = {gte: -65536, lte: 65535}];
	// 记录新增时间
	uint64 clicked_at = 4;
	// 记录描述
	string desc = 5 [(validate.rules).string = {max_len: 1024}];

	// 创建时间
	uint64 created_at = 6;
	// 更新时间
	uint64 updated_at = 7;
	// 删除时间
	uint64 deleted_at = 8;
}

message CreateRecordRequest {
	// 新增点数信息
	Record record = 1 [(validate.rules).message = {required: true}];
}

message DeleteRecordRequest {
	// 待删除的记录编号
	uint32 rid = 1;
}

message UpdateRecordRequest {
	// 待更新的记录编号
	Record record = 1 [(validate.rules).message.required = true];
}

message CountRecordRequest {
	repeated uint32 rids = 1;
	repeated uint32 pids = 2;
	uint64 min_clicked_at = 3;
	uint64 max_clicked_at = 4;
}
message CountRecordReply {
	uint32 count = 1;
}

message ListRecordRequest {
	uint32 begin = 1;
	uint32 count = 2;
	repeated uint32 rids = 3;
	repeated uint32 pids = 4;
	uint64 min_clicked_at = 5;
	uint64 max_clicked_at = 6;
}
message ListRecordReply {
	bool finished = 1;
	uint32 count = 2;
	repeated Record records = 3;
}