syntax = "proto3";

package api.point.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "sd-point/api/point/v1;v1";


service Point {
	rpc CreatePoints (CreatePointsRequest) returns (google.protobuf.Empty){
		option (google.api.http) = {
			put: "/v1/point",
			body:"*",
		};
	};
	// Sends a greeting
	rpc SayHello (HelloRequest) returns (HelloReply)  {
		option (google.api.http) = {
			// 定义一个 GET 接口，并且把 name 映射到 HelloRequest
			get: "/helloworld/{name}",
			// 可以添加附加接口
			additional_bindings {
				// 定义一个 POST 接口，并且把 body 映射到 HelloRequest
				post: "/v1/greeter/say_hello",
				body: "*",
			}
		};
	}
	rpc UpdatePoint (UpdatePointRequest) returns (UpdatePointReply);
	rpc DeletePoint (DeletePointRequest) returns (DeletePointReply);
	rpc GetPoint (GetPointRequest) returns (GetPointReply);
	rpc ListPoint (ListPointRequest) returns (ListPointReply);
}

message PointInfo {
	// 点数编号
	int64 pt_id = 1;
	// 点数数量
	int32 num = 2 [(validate.rules).int32 = {gte: -65536, lte: 65535}];
	// 新增点数的描述
	string desc = 4 [(validate.rules).string = {max_len: 1024}];
	// 点数新增时间
	int64 clicked_at = 3;

	// 创建时间
	int64 created_at = 5;
	// 更新时间
	int64 updated_at = 6;
	// 删除时间
	int64 deleted_at = 7;
}

message CreatePointsRequest {
	// 幂等令牌
	string token = 1;
	// 新增点数信息
	repeated PointInfo point = 2 [(validate.rules).repeated = {min_items: 1}];
}

message UpdatePointRequest {}
message UpdatePointReply {}

message DeletePointRequest {}
message DeletePointReply {}

message GetPointRequest {}
message GetPointReply {}

message ListPointRequest {}
message ListPointReply {}

// The request message containing the user's name.
message HelloRequest {
	string name = 1;
}

// The response message containing the greetings
message HelloReply {
	string message = 1;
}