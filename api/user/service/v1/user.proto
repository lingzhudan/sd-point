syntax = "proto3";

package api.user.v1;

option go_package = "sd-point/api/user/v1;v1";

import "google/protobuf/empty.proto";
import "validate/validate.proto";

service User {
	// 用户登录
	rpc Login (LoginRequest) returns (LoginReply) {};

	// 用户登录
	rpc WechatLogin (WechatLoginRequest) returns (LoginReply) {};

	// 用户登出
	rpc Logout (LogoutRequest) returns (google.protobuf.Empty) {};

	// 用户注册
	rpc Register (RegisterRequest) returns (RegisterReply) {};

	// 微信用户注册
	rpc WechatRegister (WechatRegisterRequest) returns (RegisterReply) {};

	// 用户绑定其他登录方式
	rpc WechatBind (WechatBindRequest) returns (google.protobuf.Empty) {};

	// 用户信息
	rpc GetUser (GetUserRequest) returns (GetUserReply) {};

	// 用户列表
	rpc ListUser (ListUserRequest) returns (ListUserReply) {};
}

message LoginRequest {
	// 用户账号
	string account = 1 [(validate.rules).string = {max_len: 64}];
	// 用户密码 经公钥加密
	string password = 2 [(validate.rules).string = {min_len: 1}];
}
message WechatLoginRequest {
	// 微信openID
	string open_id = 1 [(validate.rules).string = {len: 32}];
	// 微信手机号
	string phone_number = 2 [(validate.rules).string = {min_len: 10, max_len: 16}];
}
message LoginReply {
	string session_id = 1;
}

message LogoutRequest {
	string session_id = 1;
}
message RegisterRequest {
	// 用户账号
	string account = 1 [(validate.rules).string = {min_len: 8, max_len: 64}];
	// 用户密码 经公钥加密
	string password = 2 [(validate.rules).string = {min_len: 1}];
}
message WechatRegisterRequest {
	// 微信openID
	string open_id = 1 [(validate.rules).string = {len: 32}];
	// 微信手机号
	string phone_number = 2 [(validate.rules).string = {min_len: 10, max_len: 16}];
}
message RegisterReply {
	uint32 uid = 1;
}

message WechatBindRequest {
	// 待绑定用户编号
	uint32 uid = 1;
	// 微信openID
	string open_id = 2 [(validate.rules).string = {len: 32}];
	// TODO 手机号区号

	// 微信手机号
	string phone_number = 3 [(validate.rules).string = {min_len: 10, max_len: 16}];
}

message GetUserRequest {
	uint32 uid = 1;
}
message GetUserReply {
	message User {
		uint32 uid = 1;
		string username = 2;
	}
	User user = 1;
}

message ListUserRequest {
	repeated uint32 uids = 1 [(validate.rules).repeated.max_items = 128];
}
message ListUserReply {
	repeated GetUserReply.User users = 1;
}