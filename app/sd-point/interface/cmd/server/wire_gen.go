// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"sd-point/app/sd-point/interface/internal/biz"
	"sd-point/app/sd-point/interface/internal/conf"
	"sd-point/app/sd-point/interface/internal/data"
	"sd-point/app/sd-point/interface/internal/server"
	"sd-point/app/sd-point/interface/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, registry *conf.Registry, wechat *conf.Wechat, auth *conf.Auth, logger log.Logger) (*kratos.App, func(), error) {
	discovery := data.NewDiscovery(registry)
	userClient := data.NewUserServiceClient(auth, discovery)
	pointClient := data.NewPointServiceClient(auth, discovery)
	dataData, cleanup, err := data.NewData(userClient, pointClient, logger)
	if err != nil {
		return nil, nil, err
	}
	userRepo := data.NewUserRepo(dataData, logger)
	userUseCase := biz.NewUserUseCase(userRepo, logger)
	pointRepo := data.NewPointRepo(dataData, logger)
	pointUseCase := biz.NewPointUsecase(pointRepo, logger)
	wechatRepo := data.NewWechatRepo(wechat, logger)
	wechatUseCase := biz.NewWechatUseCase(wechatRepo, logger)
	sdPointInterfaceService := service.NewSdPointInterfaceService(userUseCase, pointUseCase, wechatUseCase, logger)
	httpServer := server.NewHTTPServer(confServer, sdPointInterfaceService, userUseCase, logger)
	registrar := data.NewRegistrar(registry)
	app := newApp(logger, httpServer, registrar)
	return app, func() {
		cleanup()
	}, nil
}
